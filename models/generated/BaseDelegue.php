<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Delegue', 'doctrine');

/**
 * BaseDelegue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_delegue
 * @property integer $Del_id_delegue
 * @property integer $id_compte
 * @property date $dateEmbauche
 * @property date $dataNaissance
 * @property string $nom
 * @property string $prenom
 * @property string $adresse
 * @property string $fax
 * @property string $tel
 * @property string $email
 * @property string $image_url
 * @property Doctrine_Collection $Delegue
 * @property Compte $Compte
 * @property Doctrine_Collection $Delegue_3
 * @property Doctrine_Collection $Demande
 * @property Doctrine_Collection $Evenement
 * @property Doctrine_Collection $Note
 * @property Doctrine_Collection $Rapport
 * @property Doctrine_Collection $Visite
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDelegue extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('delegue');
        $this->hasColumn('id_delegue', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('Del_id_delegue', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_compte', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('dateEmbauche', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('dataNaissance', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nom', 'string', 254, array(
             'type' => 'string',
             'length' => 254,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('prenom', 'string', 254, array(
             'type' => 'string',
             'length' => 254,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('adresse', 'string', 254, array(
             'type' => 'string',
             'length' => 254,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fax', 'string', 254, array(
             'type' => 'string',
             'length' => 254,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('tel', 'string', 254, array(
             'type' => 'string',
             'length' => 254,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('email', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('image_url', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Delegue', array(
             'local' => 'id_delegue',
             'foreign' => 'Del_id_delegue'));

        $this->hasOne('Compte', array(
             'local' => 'id_compte',
             'foreign' => 'id_compte'));

        $this->hasMany('Delegue as Delegue_3', array(
             'local' => 'id_delegue',
             'foreign' => 'Del_id_delegue'));

        $this->hasMany('Demande', array(
             'local' => 'id_delegue',
             'foreign' => 'id_delegue'));

        $this->hasMany('Evenement', array(
             'local' => 'id_delegue',
             'foreign' => 'id_delegue'));

        $this->hasMany('Note', array(
             'local' => 'id_delegue',
             'foreign' => 'id_delegue'));

        $this->hasMany('Rapport', array(
             'local' => 'id_delegue',
             'foreign' => 'id_delegue'));

        $this->hasMany('Visite', array(
             'local' => 'id_delegue',
             'foreign' => 'id_delegue'));
    }
}
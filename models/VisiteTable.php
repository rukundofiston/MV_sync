<?php

/**
 * VisiteTable
 * @author : Yassine ELQANDILI
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class VisiteTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object VisiteTable
     */
    public function getInstance()
    {
        return Doctrine_Core::getTable('Visite');
    }
    public function getDoctors($ids) {
        $q = Doctrine_Query::create()
            ->from('Medecin')
            ->whereIn('id_medecin',$ids);
            return $q;
    }
    public function updatePiorities($ids){
        $i=count($ids);
        echo 'update '.$i;
        foreach ($ids as $id) {
            $visite = Doctrine_Core :: getTable ( 'Visite' )->findOneBy('id_visite', $id);
            $visite->priorite = $i;
            $visite->save();
            $i--;
        }
    }

    public function getVisites_Doctors($ids){// lors de la création du planing
        $q = Doctrine_Query::create() // Création de la requête
        ->select('v.id_visite, m.nom, a.prenom')
        ->from('Visite v')
        ->leftJoin('v.Medecin m') // On joint les deux tables.
        ->whereIn('id_visite', $ids);
        return $q;
    }
    /*
     *$etat pour l'etat de la visite -1 pour pas encore, et 0 pour términé 
     *$date pour la date de visite
     */
    public function getAllVisites($date=null,$etat =-1, $id){
        $q = Doctrine_Query::create()
            ->select('v.id_visite, m.nom, a.prenom')
            ->from('Visite v')
            ->leftJoin('v.Medecin m')
            ->orderBy("date, priorite DESC")
            ->where('etat = ?', $etat)
            ->andWhere('id_delegue = ?', $id);
        if($date!=null){
            $q->addWhere('date=?', $date);
        }
        return $q;
    }

    public function getOldVisites($date, $etat=0, $id){
        $q = Doctrine_Query::create()
            ->select('v.id_visite, m.nom, a.prenom')
            ->from('Visite v')
            ->leftJoin('v.Medecin m')
            ->orderBy("date, priorite DESC")
            ->where('etat = ?', $etat)
            ->andWhere('id_delegue = ?', $id)
            ->andWhere('date<?', $date);
        return $q;
    }

    public function getVisites($ids) {
        $q = Doctrine_Query::create()
            ->from('Visite')
            ->whereIn('id_visite',$ids)
            ->orderBy("priorite DESC");
            return $q;
    }

    public function getUpcomigVisites($date, $id=null){ //servant les visites ipcoming
    $q = Doctrine_Query::create()
            ->select('v.id_visite, m.nom, a.prenom, d.description, d.objet')
            ->from('Visite v')
            ->leftJoin('v.Medecin m')
            ->leftJoin('v.Demande d')
            ->where('v.etat =-1')
            ->andWhere('id_delegue = ?', $id)
            ->andWhere("date> ?", $date)
            ->orderBy("date DESC");
        return $q;
    }

    /*
     *@param $id : id_delegue qiu a fais la visite
     *@param $id_rapport : l'id dee rapport en question 
     *@param $date : date de la visite
     *@param $etat : etat de la visite (0 pour términé , -1 : pour en cours)
     */
    public function getAllInfos($date=null, $etat=0, $id, $id_rapport=null){ //servant pour la génération des rapport qui contiendra les demandes
        $q = Doctrine_Query::create()
            ->select('v.id_visite, m.nom, a.prenom, d.description, v.id_delegue, d.objet, v.etat')
            ->from('Visite v')
            ->leftJoin('v.Medecin m')
            ->leftJoin('v.Demande d')
            ->where('v.etat =? ', $etat)
            ->addWhere('id_delegue=?', $id)
            ->orderBy("priorite DESC");
        if($date!=null){
            $q->addWhere("date= ?", $date);
        }
        if($id_rapport!=null){
            $q->addWhere("id_rapport= ?", $id_rapport);
        }
        return $q;
    }
    /*
     *@param id : Id du superviseur, pour recuperer les visites de ses delegues
     */
    public function getMyDelegatesVisites($id, $vue=null){ // les visites de mes delegue ;) pour notifications
        $q = Doctrine_Query::create()
            ->select("v.id_visite, v.date, v.time, v.etat, v.vue, d.id_delegue, d.nom, d.prenom, m.id_medecin, m.nom, m.prenom")
            ->from("Visite v")
            ->leftJoin("v.Delegue d")
            ->leftJoin("v.Medecin m")
            ->where("d.Del_id_delegue = ?", $id)
            ->where("etat = 0")
            ->orderBy("time DESC")
            ->limit(15);
        if($vue!=null){
            $q->addWhere("v.vue = ?", $vue);
        }
        return $q;
    }

}